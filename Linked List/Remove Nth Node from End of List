Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
       int size = 0;
       ListNode curr = head;
       while(head != null){
           size++;
           head=head.next;
       }
       if(n == size) return curr.next; 
       int N = size-n-1;
       ListNode ans = curr;
       while(curr != null){
           if(N == 0){
             curr.next = curr.next.next;
           }
           curr = curr.next;
           N-=1;
       }
       return ans;
    }
}