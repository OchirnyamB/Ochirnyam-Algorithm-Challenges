Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), 
find all the number of unique combinations in candidates where the candidate numbers sums to target.

The same repeated number may be chosen from candidates unlimited number of times.


Input: candidates = [1,2,3], target = 4,
A solution set is:
[
  [1,1,1,1],
  [1,1,2],
  [1,2,1],
  [1,3],
  [2,1,1],
  [2,2],
  [3,1]
]


class Solution(object):
    def combinationSum(self, candidate, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        dp = [[] for i in range(target+1)]
        for j in candidate:
            for i in range(j, target+1):
                if i == j:
                    dp[i].append([j])
                elif i-j > 0:
                    dp[i] += [s + [j] for s in dp[i-j]]
        return dp[target]
