The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Ham


Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       â†‘   â†‘

The above arrows point to positions where the corresponding bits are different.

Solution with xor:
public int hammingDistance(int x, int y) {
        int xor = x^y;
        int res = 0;
        while(xor!=0) {
            res+= xor & 1;
            xor >>= 1;
        }
        return res;
    }

Solution with xoring:

public class Solution {
    public int hammingDistance(int x, int y) {
        int number=x>y?x:y;
        int count = 0;
        while(number>0){
            int bin = x%2;
            x/=2;
            int bin2 =y%2;
            y/=2;
            if(bin!=bin2) count++;
            number /= 2;
        }
        return count;
    }
}
